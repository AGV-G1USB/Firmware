


# .abs__InterruptVectorTable
  00000000 0000019C .abs    InterruptVectorTable	(Vectors_c.obj)

# .abs_NVPROT_INIT
  0000040D 00000001 .abs    NVPROT_INIT	(Cpu_c.obj)

# .abs_NVOPT_INIT
  0000040F 00000001 .abs    NVOPT_INIT	(Cpu_c.obj)
#>00000400          ___heap_size (linker command file)
#>00000400          ___stack_size (linker command file)
#>00800000          ___RAM_ADDRESS (linker command file)
#>00002000          ___RAM_SIZE (linker command file)
#>00000000          ___FLASH_ADDRESS (linker command file)
#>00020000          ___FLASH_SIZE (linker command file)

# .userram

# .code

# .text
  00000410 00000030 .text   TI1_Init	(TI1_c.obj)
  00000440 00000022 .text   TI1_Interrupt	(TI1_c.obj)
  00000462 0000002E .text   SetRatio	(PWM2_c.obj)
  00000490 0000000A .text   PWM2_Enable	(PWM2_c.obj)
  0000049A 00000014 .text   PWM2_Init	(PWM2_c.obj)
  000004AE 0000002E .text   SetRatio	(PWM1_c.obj)
  000004DC 0000000A .text   PWM1_Enable	(PWM1_c.obj)
  000004E6 00000022 .text   PWM1_Init	(PWM1_c.obj)
  00000508 00000002 .text   Cpu_Interrupt	(Cpu_c.obj)
  0000050A 00000088 .text   __initialize_hardware	(Cpu_c.obj)
  00000592 0000011A .text   PE_low_level_init	(Cpu_c.obj)
  000006AC 000000D4 .text   AS2_RecvChar	(AS2_c.obj)
  00000780 000000B6 .text   AS2_SendChar	(AS2_c.obj)
  00000836 00000092 .text   AS2_RecvBlock	(AS2_c.obj)
  000008C8 000000D0 .text   AS2_InterruptRx	(AS2_c.obj)
  00000998 000000BE .text   AS2_InterruptTx	(AS2_c.obj)
  00000A56 00000030 .text   AS2_InterruptError	(AS2_c.obj)
  00000A86 0000006E .text   AS2_Init	(AS2_c.obj)
  00000AF4 00000132 .text   AS1_SendBlock	(AS1_c.obj)
  00000C26 000000D0 .text   AS1_InterruptRx	(AS1_c.obj)
  00000CF6 000000BE .text   AS1_InterruptTx	(AS1_c.obj)
  00000DB4 00000030 .text   AS1_InterruptError	(AS1_c.obj)
  00000DE4 0000006E .text   AS1_Init	(AS1_c.obj)
  00000E52 00000032 .text   AD1_Interrupt	(AD1_c.obj)
  00000E84 00000020 .text   AD1_Init	(AD1_c.obj)
  00000EA4 00000002 .text   __initialize_system	(startcf_c.obj)
  00000EA6 00000062 .text   __copy_rom_section	(startcf_c.obj)
  00000F08 00000046 .text   __copy_rom_sections_to_ram	(startcf_c.obj)
  00000F4E 00000004 .text   _ExitProcess	(startcf_c.obj)
  00000F52 00000210 .text   clear_mem	(startcf_c.obj)
  00001162 00000090 .text   _startup	(startcf_c.obj)
  000011F2 0000007A .text   main	(ProcessorExpert_c.obj)
  0000126C 00000002 .text   AD1_OnEnd	(Events_c.obj)
  0000126E 00000002 .text   AS2_OnError	(Events_c.obj)
  00001270 00000002 .text   AS2_OnRxChar	(Events_c.obj)
  00001272 00000002 .text   AS2_OnTxChar	(Events_c.obj)
  00001274 00000002 .text   AS2_OnFullRxBuf	(Events_c.obj)
  00001276 00000002 .text   AS2_OnFreeTxBuf	(Events_c.obj)
  00001278 00000002 .text   AS1_OnError	(Events_c.obj)
  0000127A 00000002 .text   AS1_OnRxChar	(Events_c.obj)
  0000127C 00000002 .text   AS1_OnTxChar	(Events_c.obj)
  0000127E 00000002 .text   AS1_OnFullRxBuf	(Events_c.obj)
  00001280 00000002 .text   AS1_OnFreeTxBuf	(Events_c.obj)
  00001282 0000000E .text   TI1_OnInterrupt	(Events_c.obj)
  00001290 0000001C .text   __call_static_initializers	(librt.a cf_staticinitia)
  000012AC 0000002C .text   __destroy_global_chain	(librt.a cf_staticinitia)
  000012D8 0000000C .text   _ewl_exit	(librt.a abort_exit.o   )
#>000012E4          ___ROM_AT (linker command file)
#>000012E4          ___DATA_ROM (linker command file)

# .data
#>00800000          ___DATA_RAM (linker command file)
#>00800000          __exception_table_start__ (linker command file)
# Exception index
  00800000 00000000         Exception Table Index	()
#>00800000          __exception_table_end__ (linker command file)
#>00800000          ___sinit__ (linker command file)
# Linker generated symbols
  00800000 00000004         static initializer	(linker generated)
#>00800004          __START_DATA (linker command file)
#>00800004          __END_DATA (linker command file)
#>00800004          __START_SDATA (linker command file)
#>00800004          __END_SDATA (linker command file)
#>00800004          ___DATA_END (linker command file)
#>00800004          __SDA_BASE (linker command file)

# .bss
#>00800004          ___BSS_START (linker command file)
#>00800004          __START_SBSS (linker command file)
  00800004 00000002 .sbss   ActualRatio	(PWM2_c.obj)
  00800006 00000002 .sbss   ActualRatio	(PWM1_c.obj)
  00800008 00000001 .sbss   SR_lock	(Cpu_c.obj)
  00800009 00000001 .sbss   OnFreeTxBuf_semaphore	(AS2_c.obj)
  0080000A 0000000A .sbss   OutBuffer	(AS2_c.obj)
  00800014 00000001 .sbss   OutIndxW	(AS2_c.obj)
  00800015 00000001 .sbss   OutIndxR	(AS2_c.obj)
  00800016 00000001 .sbss   AS2_OutLen	(AS2_c.obj)
  00800017 0000000A .sbss   InpBuffer	(AS2_c.obj)
  00800021 00000001 .sbss   InpIndxW	(AS2_c.obj)
  00800022 00000001 .sbss   InpIndxR	(AS2_c.obj)
  00800023 00000001 .sbss   AS2_InpLen	(AS2_c.obj)
  00800024 00000001 .sbss   SerFlag	(AS2_c.obj)
  00800025 00000001 .sbss   OnFreeTxBuf_semaphore	(AS1_c.obj)
  00800026 0000000A .sbss   OutBuffer	(AS1_c.obj)
  00800030 00000001 .sbss   OutIndxW	(AS1_c.obj)
  00800031 00000001 .sbss   OutIndxR	(AS1_c.obj)
  00800032 00000001 .sbss   AS1_OutLen	(AS1_c.obj)
  00800033 0000000A .sbss   InpBuffer	(AS1_c.obj)
  0080003D 00000001 .sbss   InpIndxW	(AS1_c.obj)
  0080003E 00000001 .sbss   InpIndxR	(AS1_c.obj)
  0080003F 00000001 .sbss   AS1_InpLen	(AS1_c.obj)
  00800040 00000001 .sbss   SerFlag	(AS1_c.obj)
  00800042 00000002 .sbss   AD1_OutV	(AD1_c.obj)
  00800044 00000001 .sbss   ModeFlg	(AD1_c.obj)
  00800045 00000001 .sbss   OutFlg	(AD1_c.obj)
  00800046 00000001 .sbss   dato	(ProcessorExpert_c.obj)
  00800048 00000004 .sbss   tam	(ProcessorExpert_c.obj)
  0080004C 0000000A .sbss   cam	(ProcessorExpert_c.obj)
#>00800058          __END_SBSS (linker command file)
#>00800058          __START_BSS (linker command file)
  00800058 00000002 .bss    SR_reg	(Cpu_c.obj)
  0080005C 00000004 .bss    __global_destructor_chain	(librt.a cf_staticinitia)
#>00800060          __END_BSS (linker command file)
#>00800060          ___BSS_END (linker command file)

# .custom
#>00800060          ___HEAP_START (linker command file)
#>00800060          ___heap_addr (linker command file)
#>00800460          ___HEAP_END (linker command file)
#>00800460          ___SP_END (linker command file)
#>00800860          ___SP_INIT (linker command file)
#>00800460          ___mem_limit (linker command file)
#>00000010          ___stack_safety (linker command file)
#>00800860          __SP_INIT (linker command file)
#>00800860          ___SP_AFTER_RESET (linker command file)
#>000012E8          _romp_at (linker command file)

# .romp
#>000012E8          __S_romp (linker command file)


# Memory map:
  v_addr   p_addr   size     name
  00000000 00000000 0000019C .abs__InterruptVectorTable abs__InterruptVectorTable
  0000040D 0000040D 00000001 .abs_NVPROT_INIT abs_NVPROT_INIT
  0000040F 0000040F 00000001 .abs_NVOPT_INIT abs_NVOPT_INIT
  00000410 00000410 00000000 .code      code
  00000410 00000410 00000ED4 .text      code
  00800000 00800000 00000000 .userram   userram
  00800000 000012E4 00000004 .data      userram
  00800004 00800004 0000005C .bss       userram
  00800060 00800060 00000000 .custom    userram
  00800060 000012E8 00000018 .romp      userram

# Link start time: Wed May 02 18:36:54 2018
# Link end time: Wed May 02 18:36:54 2018
